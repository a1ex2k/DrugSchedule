@attribute [Route(Routes.Contacts)]
@using Microsoft.AspNetCore.Components.Authorization
@inherits DrugSchedule.Client.ViewModels.ContactsViewModel

<AuthorizeView>
    <Authorized>
        <div class="d-flex flex-column gap-4">

            @if (IsDetailedView)
            {
                <PageTitle>@Contact!.СontactName | Contacts - DrugSchedule</PageTitle>
                <div>
                    <CustomButton Clicked="ToContactsHome" Color="Color.Secondary" Text="To search" Icon="fa-chevron-left"/>
                </div>
            
                <ContactExtended Contact="Contact" />

                <div>
                    <CustomButton Clicked="ShowEditorAsync" Color="Color.Secondary" Text="Edit or remove contact" Icon="fa-pen" />
                </div>
            }
            else
            {
                <PageTitle>Contacts - DrugSchedule</PageTitle>
                <div Class="h4">Contacts</div>

                <div>
                    <h4 class="h5 text-primary">Find new contacts</h4>
                    <UsersList Selectable="true" OnSelect="OnUserSelectAsync" SelectButtonText="Add"/> 
                </div>

                <div>
                    <h4 class="h5 text-primary">Manage contacts</h4>
                    <ContactsList @ref=ContactsList Selectable="false" Navigable="true" OnSelect="OnContactSelectAsync" />
                </div>
            }
        </div>
        
        <EditorModal @ref="EditorModal"
            ItemText="@((IsDetailedView ? "Add new contact: " : "Edit contact: ") + Contact?.Username)"
            AllowSave
            AllowRemove="IsDetailedView"
            Save="UpdateContactAsync"
            Delete="RemoveContactAsync">
            <EditorModalBody>
                <Validation Validator="ValidationRule.IsNotEmpty">
                    <Field>
                        <FieldLabel>Contact name (seen only by you)</FieldLabel>
                        <FieldBody>
                            <TextEdit Placeholder="Name" @bind-Text="NewUserContact.СontactName" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </FieldBody>
                    </Field>
                </Validation>
            </EditorModalBody>
        </EditorModal>

    </Authorized>
    <NotAuthorized>
        @{
            NavigationManager.NavigateTo(Routes.Auth);
        }
    </NotAuthorized>
</AuthorizeView>