@using DrugSchedule.Api.Shared.Dtos

<EmbeddedEditor AllowRemove="Editing"
                Save="SaveMedicamentAsync"
                Delete="DeleteMedicamentAsync"
                ItemText="@(Editing ? $"Edit medicament" : "New user medicament")">
    <EditorModalBody>
        <div class="d-flex mb-2 gap-2">
            @foreach (var image in Model.ExistingImages)
            {
                <ImagePreview TImageModel="DownloadableFileDto"
                              ImageModel="image"
                              ThumbnailUrl="@(x => x?.ThumbnailUrl)"
                              FullImageUrl="@(x => x?.DownloadUrl)"
                              Alt="@(x => x?.Name)"
                              PreviewSize="100px"
                                        AllowDelete
                               OnDelete="DeleteImage" />
            }
        </div>

        <Field>
                <FieldLabel>Add image</FieldLabel>

                <ListView TItem="IFileEntry"
                          Data="Model.NewImages"
                          TextField="(item) => item.Name"
                          ValueField="(item) => item.Name"
                          Mode="ListGroupMode.Selectable"
                          />

                <FileEdit Changed="@AddImageAsync" Filter="@ImageFilter" Multiple />
         </Field>
         <Field>
             <FieldLabel>Basic medicament</FieldLabel>
                @if (Model.BasicMedicament != null)
                {
                    <div class="w-100 d-flex">
                        <GlobalMedicamentListElement Medicament="Model.BasicMedicament" Selectable="false" Navigable="false" />
                        <CustomButton Icon="fa-trash-can" Color="Color.Danger" Clicked="RemoveMedicament" Outline />
                    </div>
                }

                <Accordion Class="w-100">
                    <AccordionItem>
                        <AccordionHeader>
                            <AccordionToggle>Select basic global medicament</AccordionToggle>
                        </AccordionHeader>
                        <AccordionBody Style="max-height: 300px" Class="overflow-y-auto">
                            <GlobalMedicamentList Selectable OnSelect="SelectBaseMedicament" />
                         </AccordionBody>
                     </AccordionItem>
                 </Accordion>
         </Field>


         <Validation Validator="ValidationRule.IsNotEmpty">
             <Field>
                 <FieldLabel>Name</FieldLabel>
                 <TextEdit @bind-Text="Model.Name" />
             </Field>
         </Validation>
         <Fields>
             <Validation Validator="ValidationRule.IsNotEmpty">
                 <Field ColumnSize="ColumnSize.Is6.OnTablet">
                     <FieldLabel>Release form</FieldLabel>
                     <TextEdit @bind-Text="Model.ReleaseForm" />
                 </Field>
             </Validation>
             <Field ColumnSize="ColumnSize.Is6.OnTablet">
                 <FieldLabel>Manufacturer</FieldLabel>
                 <TextEdit @bind-Text="Model.ManufacturerName" />
             </Field>
         </Fields>

         <Field>
             <FieldLabel>Description</FieldLabel>
             <RichEditor @bind-Content="Model.Description" />
         </Field>

         <Field>
             <FieldLabel>Composition</FieldLabel>
             <RichEditor @bind-Content="Model.Composition" />
         </Field>

     </EditorModalBody>
 </EmbeddedEditor>